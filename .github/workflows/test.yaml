name: Test

on:
  push:
    branches: [ "develop", "qa", "uat", "prod" ]
  pull_request:
    branches: [ "feature.*", "bugfix.*" ]

jobs:

  unit-tests:
    if: github.event_name == 'pull_request' && !(contains('develop,qa,uat,prod', ${GITHUB_REF##*/}))
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains('develop,qa,uat,prod', ${GITHUB_REF##*/})
    steps: 
    - uses: actions/checkout@v3

    - name: Setup environment variables
      run: |
        if [ ${GITHUB_REF##*/} = 'develop' ]; then echo "GCR_URL=xxx" >> $GITHUB_ENV
        elif [ ${GITHUB_REF##*/} = 'qa' ]; then echo "GCR_URL=xxx" >> $GITHUB_ENV
        elif [ ${GITHUB_REF##*/} = 'uat' ]; then echo "GCR_URL=xxx" >> $GITHUB_ENV
        elif [ ${GITHUB_REF##*/} = 'prod' ]; then echo "GCR_URL=xxx" >> $GITHUB_ENV
        fi

    - name: Build image
      run: |
        echo IMAGE_TAG=$GCR_URL:$( git rev-parse --short HEAD ) >> $GITHUB_ENV
        docker build -t $IMAGE_TAG .
    
    - name: Scan image
      run: echo 'Scanning'

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - name: Push
      run: |
        gcloud auth configure-docker
        docker push $IMAGE_TAG